// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import (
	models "github.com/felipepnascimento/challenge-bravo-flp/models"
	mock "github.com/stretchr/testify/mock"
)

// ConversionRepository is an autogenerated mock type for the ConversionRepository type
type ConversionRepository struct {
	mock.Mock
}

// CreateConversion provides a mock function with given fields: conversion
func (_m *ConversionRepository) CreateConversion(conversion *models.Conversion) error {
	ret := _m.Called(conversion)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Conversion) error); ok {
		r0 = rf(conversion)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewConversionRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewConversionRepository creates a new instance of ConversionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConversionRepository(t mockConstructorTestingTNewConversionRepository) *ConversionRepository {
	mock := &ConversionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

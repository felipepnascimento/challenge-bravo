// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import (
	models "github.com/felipepnascimento/challenge-bravo-flp/models"
	mock "github.com/stretchr/testify/mock"
)

// ExchangeRateUsecase is an autogenerated mock type for the ExchangeRateUsecase type
type ExchangeRateUsecase struct {
	mock.Mock
}

// GetCurrencyRate provides a mock function with given fields: fromCurrency, toCurrency
func (_m *ExchangeRateUsecase) GetCurrencyRate(fromCurrency *models.Currency, toCurrency *models.Currency) (float32, error) {
	ret := _m.Called(fromCurrency, toCurrency)

	var r0 float32
	if rf, ok := ret.Get(0).(func(*models.Currency, *models.Currency) float32); ok {
		r0 = rf(fromCurrency, toCurrency)
	} else {
		r0 = ret.Get(0).(float32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Currency, *models.Currency) error); ok {
		r1 = rf(fromCurrency, toCurrency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExchangeRateUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchangeRateUsecase creates a new instance of ExchangeRateUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchangeRateUsecase(t mockConstructorTestingTNewExchangeRateUsecase) *ExchangeRateUsecase {
	mock := &ExchangeRateUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

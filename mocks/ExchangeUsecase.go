// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ExchangeUsecase is an autogenerated mock type for the ExchangeUsecase type
type ExchangeUsecase struct {
	mock.Mock
}

// GetCurrencyRate provides a mock function with given fields: toCurrency
func (_m *ExchangeUsecase) GetCurrencyRate(toCurrency string) (float32, error) {
	ret := _m.Called(toCurrency)

	var r0 float32
	if rf, ok := ret.Get(0).(func(string) float32); ok {
		r0 = rf(toCurrency)
	} else {
		r0 = ret.Get(0).(float32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(toCurrency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExchangeUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchangeUsecase creates a new instance of ExchangeUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchangeUsecase(t mockConstructorTestingTNewExchangeUsecase) *ExchangeUsecase {
	mock := &ExchangeUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import (
	entities "github.com/felipepnascimento/challenge-bravo-flp/entities"
	mock "github.com/stretchr/testify/mock"

	models "github.com/felipepnascimento/challenge-bravo-flp/models"
)

// ExchangeRateService is an autogenerated mock type for the ExchangeRateService type
type ExchangeRateService struct {
	mock.Mock
}

// GetLatestRate provides a mock function with given fields: fromCurrency, toCurrency
func (_m *ExchangeRateService) GetLatestRate(fromCurrency *models.Currency, toCurrency *models.Currency) (*entities.ExchangeResult, error) {
	ret := _m.Called(fromCurrency, toCurrency)

	var r0 *entities.ExchangeResult
	if rf, ok := ret.Get(0).(func(*models.Currency, *models.Currency) *entities.ExchangeResult); ok {
		r0 = rf(fromCurrency, toCurrency)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.ExchangeResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Currency, *models.Currency) error); ok {
		r1 = rf(fromCurrency, toCurrency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExchangeRateService interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchangeRateService creates a new instance of ExchangeRateService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchangeRateService(t mockConstructorTestingTNewExchangeRateService) *ExchangeRateService {
	mock := &ExchangeRateService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
